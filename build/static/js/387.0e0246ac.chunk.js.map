{"version":3,"file":"static/js/387.0e0246ac.chunk.js","mappings":"+MAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYN,GACTO,MAAK,SAACC,GACLJ,EAAWI,EAAKC,YAEjBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,KAAKF,QAChC,CAACX,KAGF,yBACGG,GAAWA,EAAQW,OAAS,GAC3B,wBACGX,EAAQY,KAAI,SAACC,GAAD,OACX,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,UAOpB","sources":["views/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReview } from '../../services/Api';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    fetchReview(movieId)\n      .then((data) => {\n        setReviews(data.results);\n      })\n      .catch((error) => console.warn(error));\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <b>Author: {review.author}</b>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReview","then","data","results","catch","error","console","warn","length","map","review","author","content","id"],"sourceRoot":""}